{"version":3,"sources":["img/index/indexFirst.jpg","img/index/indexSecond.jpg","img/index/indexThird.jpg","img/index/indazooLogo.png","logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppMenu","react_default","a","createElement","id","className","href","Component","AppArrow","state","arrowClicked","closeBtnClicked","_handleArrowClick","_this","setState","_handleCloseBtnClick","Fragment","onClick","this","class","title","width","height","src","frameBorder","allow","allowFullScreen","AppPicture","props","context","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelect","bind","assertThisInitialized","index","direction","selectedIndex","e","fade","_this$state","Carousel_default","activeIndex","onSelect","Item","indexFirstImg","alt","Caption","indexSecondImg","indexThirdImg","App","App_AppArrow","App_AppPicture","indazooLogo","App_AppMenu","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.514d0fb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/indexFirst.b46950dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/indexSecond.d868d1ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/indexThird.db4aaf51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/indazooLogo.93729002.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component, Fragment} from 'react';\n//import { NavLink } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Carousel from 'react-bootstrap/Carousel'\nimport indexFirstImg from './img/index/indexFirst.jpg';\nimport indexSecondImg from './img/index/indexSecond.jpg';\nimport indexThirdImg from './img/index/indexThird.jpg';\nimport indazooLogo from './img/index/indazooLogo.png';\n\nclass AppMenu extends Component {\n  render() {\n    return (\n      <div id=\"iconGroup\">\n        <div id=\"appMenu\" >\n          <a className=\"homeMenu\" href=\"https://www.youtube.com/channel/UCcC5mGUWbGbrbcc077AXVvw?view_as=subscriber\"><i className=\"fa fa-youtube-play\"></i></a>\n          <a className=\"homeMenu\" href=\"https://soundcloud.com\"><i className=\"fa fa-soundcloud\"></i></a>\n          <a className=\"homeMenu\" href=\"https://www.instagram.com/b_kkoli\"><i className=\"fa fa-instagram\"></i></a>\n          <a className=\"homeMenu\" href=\"https://web.facebook.com/Ojerime/\"><i className=\"fa fa-facebook-official\"></i></a>\n          <a className=\"homeMenu\" href=\"https://soundcloud.com/woogw\" >LISTEN</a>\n          <a className=\"homeMenu\" href=\"https://smartstore.naver.com/indazoo\" >SHOP</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AppArrow extends Component {\n\n  state = {\n    arrowClicked: false,\n    closeBtnClicked: false\n  }\n\n  _handleArrowClick = () => {\n    this.setState({\n      arrowClicked: !this.state.arrowClicked\n    });\n  }\n\n  _handleCloseBtnClick = () => {\n    this.setState({\n      closeBtnClicked: true\n    });\n  }\n\n\n  render() {\n    \n    return (\n      <>\n        <div id=\"closeBtn\" onClick={this._handleArrowClick}>\n          { this.state.arrowClicked ? <i class=\"fa fa-close\"></i> : \"\"}\n        </div>\n        <div onClick={this._handleArrowClick}>\n          { this.state.arrowClicked ?\n            <div id=\"youtube\">\n              <iframe className=\"indazooTitle\" title=\"indazooTitle\" width=\"100%\" height=\"100%\" src=\"https://www.youtube.com/embed/GWOcIVZ0K1c\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\n              </iframe>\n            </div>\n          : <a href=\"#\">\n              <i className=\"material-icons\" id=\"playBtn\">play_arrow</i>\n            </a>\n          }\n        </div>\n      </>\n    )\n  }\n}\n\nclass AppPicture extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleSelect = this.handleSelect.bind(this);\n\n    this.state = {\n      index: 0,\n      direction: null,\n    };\n  }\n\n  handleSelect(selectedIndex, e) {\n    this.setState({\n      index: selectedIndex,\n      direction: e.direction,\n      fade: true\n    });\n  }\n\n  render() {\n    const { index, direction, fade } = this.state;\n\n    return (\n      <Carousel\n        activeIndex={index}\n        direction={direction}\n        onSelect={this.handleSelect}\n        fade={fade}\n      >\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100 carouselImg\"\n            src={indexFirstImg}\n            alt=\"First slide\"\n          />\n          <Carousel.Caption>\n            <h3>First slide label</h3>\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100 carouselImg\"\n            src={indexSecondImg}\n            alt=\"Second slide\"\n          />\n\n          <Carousel.Caption>\n            <h3>Second slide label</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100 carouselImg\"\n            src={indexThirdImg}\n            alt=\"Third slide\"\n          />\n\n          <Carousel.Caption>\n            <h3>Third slide label</h3>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\n            </p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppArrow className=\"AppArrow\"/>\n        <AppPicture />\n        <img className=\"indazooLogo\" src={indazooLogo} />\n        <AppMenu/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}